tcp ip
port 8008
x protocol port 33060

Root PW = root

adminAccount
User Name : admin
PW : admin

V 5.7.25



DATABSE Command line 사용법.

CREATE DATABASE 'test';
 = test라는 데이터 베이스 생성.

SHOW DATABASES;
 = 모든 DB 보여줌.

use test;
 = 사용할 데이터베이스 'test' DB를 사용함.

CREATE TABLE TEST(
id varchar(20) NOT NULL
pw int(11)
);
= use 한 DB에서 테이블 생성, 

SELECT * FROM test;
=DB이름이 test인 곳에서 모든 정보를 가져옴.

DELETE FROM test WHERE id=123;
=test DB에서 id값이 123인 것을 삭제함.

DROP DATABASE test;
=test이름의 DB 삭제.

INSERT INTO professor (name, belong, phone) 
VALUES('유재석', 'IDE','01112345678');



DBM - DataBase Manager 로 Database 생성. 
       - DBM으로 매니저들 아이디, 비번 넣어놓을거임.




from flask import Flask, render_template, request, redirect, url_for
import MySQLdb

app = Flask(__name__)

conn = MySQLdb.connect(host="localhost", user="root", password="root", db="login_data")

@app.route("/")
def index():
    return render_template('test_index.html', title="SignUp")


@app.route("/signUp", methods=["POST"])
def signUp():
    username = str(request.form["user"])
    password = str(request.form["password"])

    cursor = conn.cursor()

    cursor.execute("INSERT INTO DBA (name, password VALUES(%s, %s)",(username, password)
    conn.commit()
    return redirect(url_for("login"))


@app.route("/login")
def login():
    return render_template("login.html", title="data")


@app.route("/checkUser", methods=["POST"])
def check():
    username = str(request.form["user"])
    password = str(request.form["password"])
    cursor = conn.cursor()
    cursor.execute("SELECT name FROM user WHERE name = ' "+username+" ' ")
    user = cursor.fetchone()

    if len(user) is 1:
        return redirect(url_for("home"))
    else:
        return "failed"


if __name__ == "__main__":
    app.run()


# Using a while loop
cursor.execute("SELECT * FROM employees")
row = cursor.fetchone()
while row is not None:
  print(row)
  row = cursor.fetchone()

# Using the cursor as iterator
cursor.execute("SELECT * FROM employees")
for row in cursor:
  print(row)






데이터 추가
INSERT INTO 테이블명(컬럼1, 컬럼2) VALUES(데이터1, 데이터2);
ex) INSERT INTO USER(ID, PW, NAME) VALUES("Billy", "1q2w3e4r", "빌리")

로그인 확인
SELECT admin_name FROM administor WHERE admin_id='"+ID변수+"' AND admin_pw='"+PW변수+"' "

정부 DB 조회하는 법
SELECT go.GO_License_Plate, car_status.car_status_now, model.model_car
FROM go 
INNER JOIN car_status ON go.GO_car_state = car_status.car_status_key
INNER JOIN model ON go.GO_car_model = model.model_key;


인식 차량 확인 (인식된 차량 정보를 가져옴)
SELECT recognize.re_plate, location.location_now, model.model_car
FROM recognize 
INNER JOIN location ON recognize.re_location = location.location_key
INNER JOIN model ON recognize.re_model = model.model_key;


범죄 차량 확인 (정부 DB와 인식된 DB를 비교하여 같은 차번 확인하여 체크)
SELECT recognize.re_plate, recognize.re_time,  location.location_now, model.model_car , recognize.re_time
FROM recognize
LEFT JOIN go
ON go.GO_License_Plate = recognize.re_plate
INNER JOIN location ON recognize.re_location = location.location_key
INNER JOIN model ON recognize.re_model = model.model_key;


정보 삭제
DELETE FROM 테이블명 WHERE 인덱스='"+비교 변수+"'
ex) 차량 번호 11가1111을 정부 DB로 부터 삭제
DELETE FROM go WHERE go.GO_License_Plate = '"+License_plate+"';


차량 조회 (11가1111대신 변수가 들어가면 됨)
SELECT recognize.re_plate, location.location_now, model.model_car, recognize.re_time
FROM recognize 
INNER JOIN location ON recognize.re_location = location.location_key
INNER JOIN model ON recognize.re_model = model.model_key
where recognize.re_plate = '11가1111';





SW소개 (개발자, SW)
실시간 모니터링(지도랑 같이)
그래프 차트

로그인(버튼2개, 일반, 관리자)
로그아웃
회원가입


outfile 경로 설정
https://dololak.tistory.com/252 - 참고.
@참고사항 - CMD창 관리자 모드로 실행하시고, 
              - 경로 설정시 역슬래시가 아닌 슬래쉬 하나 입니다. ex) C:/user/~~~
              - 현재  C:\Users\Public 여기에 저장되도록 변경.





